!function(e){var t={};function n(i){if(t[i])return t[i].exports;var o=t[i]={i:i,l:!1,exports:{}};return e[i].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,i){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(n.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(i,o,function(t){return e[t]}.bind(null,o));return i},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=3)}([function(e,t,n){"use strict";n.r(t),n.d(t,"display",(function(){return o}));var i=n(2);const o={playgroundPanel(e){e?(document.getElementById("sidePanelRight").classList.remove("hide"),document.getElementById("sidePanelLeft").classList.remove("hide"),document.getElementById("playgroundContainer").classList.remove("hide")):(document.getElementById("sidePanelRight").classList.add("hide"),document.getElementById("sidePanelLeft").classList.add("hide"),document.getElementById("playgroundContainer").classList.add("hide"))},mainMenu(e){e?document.getElementById("mainMenu").classList.remove("hide"):document.getElementById("mainMenu").classList.add("hide")},endGame(e){const t=e?"flex":"none";document.getElementById("endGame").style.display=t,e&&(document.getElementById("finalScore").innerHTML=i.game.gameScore)},pause(e){const t=e?"block":"none";document.getElementById("gamePaused").style.display=t}}},function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));const{display:i}=n(0),{game:o}=n(2),s={showMenu(){i.mainMenu(!0),i.playgroundPanel(!1)},enduranceMode(){i.mainMenu(!1),i.playgroundPanel(!0),o.init()}}},function(e,t,n){"use strict";n.r(t),n.d(t,"game",(function(){return m}));const i={blockSize:30,rows:20,columns:10,speed:400,devMode:!1,deletionAnimationSpeed:500,previewSize:4},o={updateGameConfiguration(){const e=document.getElementById("rowNumber"),t=document.getElementById("columnNumber"),n=document.getElementById("blockSize"),o=document.getElementById("blockSpeed"),s=i.rows===parseInt(e.value,10)&&i.columns===parseInt(t.value,10)&&i.blockSize===parseInt(n.value,10);return i.rows=parseInt(e.value,10),i.columns=parseInt(t.value,10),i.blockSize=parseInt(n.value,10),i.speed=100*parseInt(o.value,10),!s},displayInitialConfiguration(){i.devMode?(document.getElementById("configPanel").style.display="flex",document.getElementById("rowNumber").value=i.rows,document.getElementById("columnNumber").value=i.columns,document.getElementById("blockSize").value=i.blockSize,document.getElementById("blockSpeed").value=i.speed/100):document.getElementById("configPanel").style.display="none"},enableDisplay(e){document.getElementById("rowNumber").disabled=!e,document.getElementById("columnNumber").disabled=!e,document.getElementById("blockSize").disabled=!e,document.getElementById("blockSpeed").disabled=!e}},s={blocks:[],preview:[],deletingAnimation:"init",generatePlaygroundGrid(){const e=document.getElementById("playground"),t=document.querySelector("html");t.style.setProperty("--columns",i.columns),t.style.setProperty("--rows",i.rows),t.style.setProperty("--block-width",i.blockSize+"px");const n=i.rows*i.columns;for(let t=0;t<n;t++){let n=document.createElement("div");n.className="playgroundBlock",i.devMode&&(n.innerHTML=t),e.appendChild(n)}for(let t=0;t<i.columns;t++){let t=document.createElement("div");t.className="playgroundBottom taken",e.appendChild(t)}this.blocks=Array.from(document.querySelectorAll(".grid div"))},generatePreviewGrid(){const e=document.getElementById("nextTetrominoBox"),t=Math.pow(i.previewSize,2);for(let n=0;n<t;n++){let t=document.createElement("div");t.className="playgroundBlock",i.devMode&&(t.innerHTML=n),e.appendChild(t)}this.preview=Array.from(document.querySelectorAll("#nextTetrominoBox div"))},generateSavedGrid(){const e=document.getElementById("savedTetrominoBox"),t=Math.pow(i.previewSize,2);for(let n=0;n<t;n++){let t=document.createElement("div");t.className="playgroundBlock",i.devMode&&(t.innerHTML=n),e.appendChild(t)}this.saved=Array.from(document.querySelectorAll("#savedTetrominoBox div"))},generateAllGrid(){this.generatePlaygroundGrid(),this.generatePreviewGrid(),this.generateSavedGrid()},cleanPreviewGrid(){this.preview.forEach(e=>e.className="playgroundBlock")},cleanSavedGrid(){this.saved.forEach(e=>e.className="playgroundBlock")},removeGrid(e){const t=document.getElementById(e);for(;t.firstChild;)t.removeChild(t.firstChild)},removeAllGrid(){this.removeGrid("nextTetrominoBox"),this.removeGrid("savedTetrominoBox"),this.removeGrid("playground")},cleanAllGrid(){this.removeGrid("playground"),this.cleanPreviewGrid(),this.cleanSavedGrid()},handleConfigUpdate(){o.updateGameConfiguration()&&(this.removePlaygroundGrid(),this.generatePlaygroundGrid())},lineIsMade(){let e=[],t=[];for(let t=0;t<i.columns;t++)e.push(t);for(let n=0;n<i.rows;n++){e.every(e=>this.blocks[n*i.columns+e].classList.contains("taken")||this.blocks[n*i.columns+e].classList.contains("tetromino"))&&t.push(n)}return t.length,t},animateDeleteLine(e){for(let t=0;t<i.columns;t++)e.forEach(e=>this.blocks[i.columns*e+t].className="playgroundBlock taken erasing")},deleteLine(e){for(let t=0;t<e.length;t++){let n=[];for(let o=0;o<e[t]*i.columns;o++)n.push(this.blocks[o].className),this.blocks[o].className="playgroundBlock";for(let o=0;o<e[t]*i.columns;o++){!this.blocks[o+i.columns].className.includes("playgroundBottom")&&(this.blocks[o+i.columns].className=n[o])}}}},r={number:0,position:0,rotation:0,current:[],canBeSaved:!0,saved:{},next:{},theTetrominoes:[],theTetrominoesPreview:[],createTetrominoes:e=>[[[1,e+1,2*e+1,3*e+1],[0,1,2,3],[1,e+1,2*e+1,3*e+1],[0,1,2,3]],[[0,e,e+1,e+2],[1,2,e+1,2*e+1],[0,1,2,e+2],[1,e+1,2*e,2*e+1]],[[2,e,e+1,e+2],[1,e+1,2*e+1,2*e+2],[0,1,2,e],[0,1,e+1,2*e+1]],[[1,2,e+1,e+2],[1,2,e+1,e+2],[1,2,e+1,e+2],[1,2,e+1,e+2]],[[1,2,e,e+1],[1,e+1,e+2,2*e+2],[1,2,e,e+1],[1,e+1,e+2,2*e+2]],[[0,1,e+1,e+2],[2,e+1,e+2,2*e+1],[0,1,e+1,e+2],[2,e+1,e+2,2*e+1]],[[1,e,e+1,e+2],[1,e+1,e+2,2*e+1],[0,1,2,e+1],[2,e+1,e+2,2*e+2]]],initPreview(){const e=Math.floor(Math.random()*this.theTetrominoes.length),t=Math.floor(Math.random()*this.theTetrominoes[this.number].length),n=this.theTetrominoesPreview[e][t];this.next={number:e,rotation:t,tetromino:n}},initSaved(){this.saved={number:0,rotation:0,tetromino:[]}},initTetromino(){"notStarted"===m.gameStatut&&(this.theTetrominoes=this.createTetrominoes(i.columns),this.theTetrominoesPreview=this.createTetrominoes(i.previewSize),this.initPreview()),this.number=this.next.number,this.rotation=this.next.rotation,this.position=Math.floor(i.columns/2-1),this.canBeSaved=!0,this.initPreview(),this.current=this.theTetrominoes[this.number][this.rotation]},saveTetromino(){this.saved={number:this.number,rotation:this.rotation,tetromino:this.theTetrominoesPreview[this.number][this.rotation]}},switchSaved(){const e=this.saved;this.saveTetromino(),this.number=e.number,this.rotation=e.rotation,this.current=this.theTetrominoes[this.number][this.rotation],this.canBeSaved=!1},rotateTetromino(e){let t=this.rotation;"right"===e?t++:t--,t>=this.theTetrominoes[this.number].length&&(t=0),t<0&&(t=this.theTetrominoes[this.number].length-1);const n=this.theTetrominoes[this.number][t],o=n.some(e=>s.blocks[this.position+e+i.columns].classList.contains("taken")),r=n.some(e=>(e+this.position)%i.columns==0),a=n.some(e=>(e+this.position+1)%i.columns==0);o||r&&a||(this.undraw(),this.current=n,this.rotation=t,this.draw())},drawPreview(){s.cleanPreviewGrid(),this.next.tetromino.forEach(e=>{s.preview[e].classList.add("tetromino"),s.preview[e].classList.add("colorT"+this.next.number.toString())})},drawSaved(){s.cleanSavedGrid(),this.saved.tetromino.forEach(e=>{s.saved[e].classList.add("tetromino"),s.saved[e].classList.add("colorT"+this.saved.number.toString())})},draw(){this.current.forEach(e=>{s.blocks[this.position+e].classList.add("tetromino"),s.blocks[this.position+e].classList.add("colorT"+this.number.toString())})},drawNew(){this.initTetromino(),this.draw(),this.drawPreview()},undraw(){this.current.forEach(e=>{s.blocks[this.position+e].className="playgroundBlock"})},moveDown(){this.undraw(),this.position+=i.columns,this.draw()},moveLeft(){this.current.some(e=>(e+this.position)%i.columns==0)||this.lateralBlock("left")||(this.undraw(),this.position--,this.draw())},pushDown(){"init"===s.deletingAnimation&&(this.freeze()||(this.undraw(),this.position+=i.columns,this.draw()))},moveRight(){this.current.some(e=>(e+this.position+1)%i.columns==0)||this.lateralBlock("right")||(this.undraw(),this.position++,this.draw())},freeze(){return!!this.current.some(e=>s.blocks[this.position+e+i.columns].classList.contains("taken"))&&(this.current.forEach(e=>{s.blocks[e+this.position].classList.add("taken")}),!0)},lateralBlock(e){let t;return t="right"===e?1:-1,this.current.some(e=>s.blocks[this.position+e+t].classList.contains("taken"))}};var a=n(0);const d={keys:{left:37,right:39,down:40,rotLeft:65,rotRight:90,save:69},handleKeyPress(e){"play"===m.gameStatut&&(e.keyCode===this.keys.left&&r.moveLeft(),e.keyCode===this.keys.right&&r.moveRight(),e.keyCode===this.keys.down&&r.pushDown(),e.keyCode===this.keys.rotLeft&&r.rotateTetromino("left"),e.keyCode===this.keys.rotRight&&r.rotateTetromino("right"),e.keyCode===this.keys.save&&m.saveTetromino())},handleStart(){m.start()},handleReset(){m.reset()},handleBackMenu(){m.backMenu()},handleStart(){m.start()},setListener(e){e?(document.getElementById("resetButton").addEventListener("click",this.handleReset),document.getElementById("startButton").addEventListener("click",this.handleStart),document.getElementById("backMenu").addEventListener("click",this.handleBackMenu),document.addEventListener("keydown",this.handleKeyPress.bind(this))):(document.getElementById("resetButton").removeEventListener("click",this.handleReset),document.getElementById("startButton").removeEventListener("click",this.handleReset),document.getElementById("backMenu").removeEventListener("click",this.handleReset),document.removeEventListener("keydown",this.handleKeyPress.bind(this)))}};var l=n(1);const m={gameScore:0,timerId:0,gameStatut:"notStarted",gameMode:"",init(){s.generateAllGrid(),r.initSaved(),d.setListener(!0)},quit(){this.restore(),s.removeAllGrid(),document.getElementById("startButton").innerHTML="Start Game",d.setListener(!1)},restore(){this.gameScore=0,this.updateScore(0),this.gameStatut="notStarted",a.display.endGame(!1),a.display.pause(!1),s.deletingAnimation="init",clearInterval(this.timerId)},start(){"lost"===this.gameStatut&&this.reset(),"notStarted"===this.gameStatut&&r.drawNew(),"pause"===this.gameStatut||"notStarted"===this.gameStatut?(this.timerId=setInterval(this.run.bind(this),i.speed),document.getElementById("startButton").innerHTML="Pause Game",a.display.pause(!1),this.gameStatut="play"):this.pause()},pause(){this.gameStatut="pause",a.display.pause(!0),document.getElementById("startButton").innerHTML="Resume",clearInterval(this.timerId)},reset(){s.cleanAllGrid(),s.generatePlaygroundGrid(),this.restore(),r.initSaved(),this.gameStatut="notStarted",document.getElementById("startButton").innerHTML="Start Game"},backMenu(){this.quit(),l.a.showMenu()},saveTetromino(){r.canBeSaved&&(r.saved.tetromino.length>0?(r.undraw(),r.switchSaved(),r.drawSaved(),r.undraw(),r.draw()):(r.saveTetromino(),r.drawSaved(),r.undraw(),r.drawNew()))},updateScore(e){const t=e*e*10;this.gameScore+=t,document.getElementById("score").innerHTML=this.gameScore},run(){if("onGoing"===s.deletingAnimation)return;const e=s.lineIsMade(),t=r.freeze();if(t&&e.length&&"done"!==s.deletingAnimation)return this.updateScore(e.length),s.animateDeleteLine(e),s.deletingAnimation="onGoing",void setTimeout(()=>{s.deletingAnimation="done"},i.deletionAnimationSpeed);if(t){s.deleteLine(e),s.deletingAnimation="init",r.drawNew();this.loseCondition()&&(clearInterval(this.timerId),this.gameStatut="lost",document.getElementById("startButton").innerHTML="Restart",a.display.endGame(!0))}else r.moveDown()},loseCondition:()=>r.current.some(e=>s.blocks[r.position+e].classList.contains("taken"))}},function(e,t,n){"use strict";n.r(t);var i=n(1);document.getElementById("enduranceMode").addEventListener("click",()=>i.a.enduranceMode())}]);